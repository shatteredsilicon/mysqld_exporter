# Offset to subtract from timeout in seconds
timeout-offset = 0.25

[web]
# Address to listen on for web interface and telemetry
listen-address = :42002
# Path under which to expose metrics
telemetry-path = /metrics
# Path to YAML file with server_user, server_password options for http basic auth (overrides HTTP_AUTH env var)
auth-file = /opt/ss/ssm-client/ssm.yml
# Path to SSL certificate file
ssl-cert-file = 
# Path to SSL key file
ssl-key-file = 

[config]
# Path to .my.cnf file to read MySQL credentials from
my-cnf = 

[exporter]
# Set a lock_wait_timeout on the connection to avoid long metadata locking
lock_wait_timeout = 2
# Add a log_slow_filter to avoid slow query logging of scrapes. NOTE: Not supported by Oracle MySQL
log_slow_filter = 0
# Use global connection pool instead of creating new pool for each http request
global-conn-pool = 1
# Maximum number of open connections to the database. https://golang.org/pkg/database/sql/#DB.SetMaxOpenConns
max-open-conns = 3
# Maximum number of connections in the idle connection pool. https://golang.org/pkg/database/sql/#DB.SetMaxIdleConns
max-idle-conns = 3
# Maximum amount of time a connection may be reused. https://golang.org/pkg/database/sql/#DB.SetConnMaxLifetime
conn-max-lifetime = 60s
# database dsn
dsn = 

[collect]
# Collect all metrics
all = 0
global_status = 1
global_variables = 1
slave_status = 1
info_schema.processlist = 1
info_schema.tables = 1
info_schema.innodb_tablespaces = 0
info_schema.innodb_metrics = 1
auto_increment.columns = 1
binlog_size = 1
perf_schema.tableiowaits = 1
perf_schema.indexiowaits = 1
perf_schema.tablelocks = 1
perf_schema.eventsstatements = 0
perf_schema.eventswaits = 1
perf_schema.file_events = 1
perf_schema.file_instances = 0
info_schema.userstats = 1
info_schema.clientstats = 0
info_schema.tablestats = 1
info_schema.indexstats = 1
info_schema.query_response_time = 1
engine_tokudb_status = 0
engine_innodb_status = 0
heartbeat = 0
info_schema.innodb_cmp = 1
info_schema.innodb_cmpmem = 1
custom_query = 1